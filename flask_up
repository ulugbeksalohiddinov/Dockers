- app.py
---------
from main import app

if __name__ == "__main__":
  app.run()

- main.py

  from flask import Flask, request, jsonify
import json, os

AUTHOR = os.environ['AUTHOR']

app=Flask(__name__)


@app.route('/', methods=['GET'])
def get_project():
    res = {
        'env': AUTHOR,
        'app': "Python Flask",
        'method': "GET",
        'status': 200
    }
    return jsonify(res)

- req.txt
----------
click==8.1.7
Flask==2.0.1
importlib-metadata==6.7.0
itsdangerous==2.1.2
Jinja2==3.1.2
MarkupSafe==2.1.3
typing-extensions==4.7.1
Werkzeug==2.2.3
zipp==3.15.0

- Dockerfile
------------
FROM python:3.8-alpine

WORKDIR /app

COPY /req.txt /app

RUN pip install -r req.txt

COPY . /app

CMD ["python3", "-m" , "flask", "run", "--host=0.0.0.0"]

- docker-compose.yml
--------------------
version: "3.9"
services:
  flaskapp:
    build:
      context: .
    networks:
      - api_net
    ports:
      - '5000:5000'
    environment:
      -  AUTHOR= "prod"
    volumes:
      - api_vol:/app
    depends_on:
      - postgres
  postgres:
    image: postgres:latest
    env_file: ./.env
    environment:
      POSTGRES_USER: POSTGRESDB_USER
      POSTGRES_PASSWORD: POSTGRESDB_PASSWORD
    ports:
      - '5432:5432'
    volumes:
      - db_vol:/var/lib/postgresql/data
    networks:
      - db_net

volumes:
  api_vol:
  db_vol:

networks:
  api_net:
    driver: bridge
  db_net:
    driver: bridge

- .env.txt
-----------
POSTGRESDB_USER: postgres
POSTGRESDB_PASSWORD: postgres
